<?php

/**
 * @file
 * Synchronize files with an Amazon S3 bucket across multiple regions.
 */

use Drupal\Core\StreamWrapper\PublicStream;

/**
 * Implements hook_file_url_alter().
 */
function amazon_s3_sync_file_url_alter(&$uri) {
  if (preg_match('/^public:\/\/(.*)$/', $uri, $matches)) {
    $path = $matches[1];

    $config = \Drupal::Config('amazon_s3_sync.config');

    if ($config->get('rewrite_url')) {
      $excludes = $config->get('s3cmd_excludes');
      foreach ($excludes as $value) {
        if (fnmatch($value, $path)) {
          return;
        }
      }

      $protocol = ($config->get('enable_ssl')) ? 'https' : 'http';

      $uri = $protocol . '://' . $config->get('common_name') . '/' . $path;
    }
  }
}

/**
 * Implements hook_node_delete().
 */
function amazon_s3_sync_node_delete(Drupal\node\Entity\Node $node) {
  #amazon_s3_sync_files($node);
}

/**
 * Implements hook_node_insert().
 */
function amazon_s3_sync_node_insert(Drupal\node\Entity\Node $node) {
  #amazon_s3_sync_files($node);
}

/**
 * Implements hook_node_update().
 */
function amazon_s3_sync_node_update(Drupal\node\Entity\Node $node) {
  #amazon_s3_sync_files($node);
}

/**
 * Synchronize files for a given node with the Amazon S3 bucket(s).
 *
 * @param string $node
 *   \Drupal\node\Entity\Node
 */
function amazon_s3_sync_files(Drupal\node\Entity\Node $node) {
  $config = \Drupal::Config('amazon_s3_sync.config');

  $img_urls = array();
  foreach ($node->field_image as $item) {
    if ($item->entity) {
      $img_urls[] = $item->entity->url();
    }
  }

  dsm($img_urls);

  if (!$path) {
    $path = DRUPAL_ROOT . '/' . PublicStream::basePath() . '/';
  }

  // Sync each file using the S3cmd client.
  $s3cmd = \Drupal::service('amazon_s3_sync.s3cmd');
  $s3cmd->dry_run = $config->get('dry_run');
  $s3cmd->debug   = $config->get('debug');
  $s3cmd->verbose = $config->get('verbose');
  $s3cmd->sync($path, $source);
}
