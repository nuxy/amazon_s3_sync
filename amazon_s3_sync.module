<?php

/**
 * @file
 * Synchronize files with an Amazon S3 bucket across multiple regions.
 */

/**
 * Implements hook_file_url_alter().
 */
function amazon_s3_sync_file_url_alter(&$uri) {
  if (preg_match('/^public:\/\/(.*)$/', $uri, $matches)) {
    $path = $matches[1];

    $config = \Drupal::Config('amazon_s3_sync.config');

    if ($config->get('rewrite_url')) {
      $excludes = $config->get('s3cmd_excludes');
      foreach ($excludes as $value) {
        if (fnmatch($value, $path)) {
          return;
        }
      }

      $protocol = ($config->get('enable_ssl')) ? 'https' : 'http';

      $uri = $protocol . '://' . $config->get('endpoint') . '/' . $path;
    }
  }
}

/**
 * Implements hook_file_delete().
 */
function amazon_s3_sync_file_delete(Drupal\Core\Entity\EntityInterface $entity) {
  amazon_s3_sync_file($entity->getFileUri());
}

/**
 * Implements hook_file_insert().
 */
function amazon_s3_sync_file_insert(Drupal\Core\Entity\EntityInterface $entity) {
  amazon_s3_sync_file($entity->getFileUri());
}

/**
 * Implements hook_file_update().
 */
function amazon_s3_sync_file_update(Drupal\Core\Entity\EntityInterface $entity) {
  amazon_s3_sync_file($entity->getFileUri());
}

/**
 * Synchronize file updates with the Amazon S3 bucket(s).
 *
 * @param string $uri
 *   Drupal public: file path.
 */
function amazon_s3_sync_file($uri) {
  $config = \Drupal::Config('amazon_s3_sync.config');

  $source = \Drupal::service('file_system')->realpath($uri);

  if (file_exists($source)) {
    $target = file_uri_target($uri);

    // Sync the file using the S3cmd client.
    $s3cmd = \Drupal::service('amazon_s3_sync.s3cmd');
    $s3cmd->dry_run = $config->get('dry_run');
    $s3cmd->debug   = $config->get('debug');
    $s3cmd->verbose = $config->get('verbose');
    $s3cmd->sync($source, $target);
  }
}
